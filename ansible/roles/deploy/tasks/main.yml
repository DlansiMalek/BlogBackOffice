---

- name: Login docker
  docker_login:
    registry_url: "{{ lookup('env','CI_REGISTRY') }}"
    username: "{{ lookup('env','CI_REGISTRY_USER') }}"
    password: "{{ lookup('env','CI_JOB_TOKEN') }}"
    state: "present"

- name: Create Eventizer API data directory
  file:
    path: "{{ project_dir }}/data"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  become: true

- name: Copy .env
  copy:
    src: "{{ env_file }}"
    dest: "{{ project_dir }}/.env"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  become: true

- name: Copy schedular laravel-worker
  template:
    src: laravel-worker.conf.j2
    dest: "{{ project_dir }}/laravel-worker.conf"
    owner: "root"
    group: "root"
  become: true

- name: Run Eventizer API
  docker_compose:
    project_name: "{{ project_name }}-{{project_version}}"
    pull: true
    definition:
      version: '3.7'
      services:
        web:
          image: "{{ lookup('env','WEB_IMAGE_NAME') }}"
          container_name: "{{ project_name }}-{{project_version}}-web"
          restart: always
          links:
            - app
          environment:
            VIRTUAL_HOST: "{{ host_name }}"
            LETSENCRYPT_HOST: "{{ host_name }}"
            LETSENCRYPT_EMAIL: "{{ letsencrypt_email }}"
          labels:
            - "traefik.enable=true"
            - "traefik.docker.network=nginx-proxy"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web.entrypoints=https"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web.rule=Host(`{{ host_name }}`)"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web.tls=true"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web.tls.certresolver=letsencrypt"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web.middlewares=security-headers"
            - "traefik.http.services.{{ project_name }}-{{project_version}}-web.loadbalancer.server.port=80"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web-primary.entrypoints=https"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web-primary.rule=Host(`{{ primary_host_name }}`)"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web-primary.tls=true"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web-primary.tls.certresolver=letsencrypt"
            - "traefik.http.routers.{{ project_name }}-{{project_version}}-web-primary.middlewares=security-headers"

        app:
          image: "{{ lookup('env','APP_IMAGE_NAME') }}"
          container_name: "{{ project_name }}-{{project_version}}-app"
          restart: always
          volumes:
            - "{{ project_dir }}/.env:/var/www/.env"
            - "{{ project_dir }}/data:/var/www/storage/app"
            - "{{ project_dir }}/laravel-worker.conf:/etc/supervisor/conf.d/laravel-worker.conf"
          env_file: "{{ project_dir }}/.env"
          environment:
            ELASTIC_APM_SERVER_URL: "{{ apm_server_name }}"
            ELASTIC_APM_SERVICE_NAME: "{{ project_name }}-{{project_version}}-app"

      networks:
        default:
          external:
            name: "{{ docker_network }}"
  notify: Log out of DockerHub

- name: Sleep for 5 seconds
  wait_for:
    timeout: 5

- name: Migrate BD
  command: |
    docker exec {{ project_name }}-{{ project_version }}-app php artisan migrate

- name: Run supervisor
  command: >
    docker exec {{ project_name }}-{{ project_version }}-app service supervisor start
    docker exec {{ project_name }}-{{ project_version }}-app supervisorctl reread
    docker exec {{ project_name }}-{{ project_version }}-app supervisorctl update
    docker exec {{ project_name }}-{{ project_version }}-app supervisorctl start laravel-worker:*
    docker exec {{ project_name }}-{{ project_version }}-app php artisan queue:restart
# supervisorctl status laravel-worker:*

- name: Change Dir Permission
  command: docker exec {{ project_name }}-{{ project_version }}-app chown -R www-data.www-data .

- name: Change Dir Permission
  command: docker exec {{ project_name }}-{{ project_version }}-app chmod -R 755 .

- name: Change Dir Permission
  command:  docker exec {{ project_name }}-{{ project_version }}-app chmod -R 777 ./app

- name: Change Dir Permission
  command: docker exec {{ project_name }}-{{ project_version }}-app chmod -R 777 ./vendor

- name: Change Dir Permission
  command:   docker exec {{ project_name }}-{{ project_version }}-app php artisan key:generate
